<?xml version="1.0"?>
<!DOCTYPE cache-config SYSTEM "cache-config.dtd">

<cache-config>
	<caching-scheme-mapping>
		<!-- Configuración para Coherence Tomcat Session -->

		<!-- The clustered cache used to store Session management data. -->
		<cache-mapping>
			<cache-name>session-management</cache-name>
			<scheme-name>replicated</scheme-name>
		</cache-mapping>

		<!-- The clustered cache used to store ServletContext attributes. -->
		<cache-mapping>
			<cache-name>servletcontext-storage</cache-name>
			<scheme-name>replicated</scheme-name>
		</cache-mapping>

		<!-- The clustered cache used to store Session attributes. -->
		<cache-mapping>
			<cache-name>session-storage</cache-name>
			<scheme-name>session-near</scheme-name>
		</cache-mapping>

		<!-- The clustered cache used to store the "overflowing" (split-out due to size) Session attributes. Only used for the "Split" model. -->
		<cache-mapping>
			<cache-name>session-overflow</cache-name>
			<scheme-name>session-distributed</scheme-name>
		</cache-mapping>

		<!-- The clustered cache used to store IDs of "recently departed" Sessions. -->
		<cache-mapping>
			<cache-name>session-death-certificates</cache-name>
			<scheme-name>session-certificate</scheme-name>
		</cache-mapping>

		<!-- The local cache used to store Sessions that are not yet distributed (if there is a distribution controller).  -->
		<cache-mapping>
			<cache-name>local-session-storage</cache-name>
			<scheme-name>unlimited-local</scheme-name>
		</cache-mapping>

		<!-- The local cache used to store Session attributes that are not distributed (if there is a distribution controller or attributes are allowed to become
		local when serialization fails). -->
		<cache-mapping>
			<cache-name>local-attribute-storage</cache-name>
			<scheme-name>unlimited-local</scheme-name>
		</cache-mapping>

		<!-- Configuración para las caches con Coherences -->
		<!-- Cache distribuida genérica por si no tiene una cache específica asociada a ella. -->
		<cache-mapping>
			<cache-name>distributed-*</cache-name>
			<scheme-name>distrubuted-scheme</scheme-name>
		</cache-mapping>

		<!-- Cache por defecto por si se olvida una determinada cache en Coherence Server -->
		<cache-mapping>
			<cache-name>*</cache-name>
			<scheme-name>default-scheme</scheme-name>
		</cache-mapping>
	</caching-scheme-mapping>

	<caching-schemes>
		<!-- Cache distribuida que podrá almacenar alrededor de 20M y expira cada 24 horas. -->
		<distributed-scheme>
			<scheme-name>distrubuted-scheme</scheme-name>
			<service-name>DistributedService</service-name>
			<backing-map-scheme>
				<local-scheme>
					<expiry-delay>24H</expiry-delay>
					<high-units>20</high-units>
					<unit-calculator>BINARY</unit-calculator>
					<unit-factor>1048576</unit-factor>
				</local-scheme>
			</backing-map-scheme>
			<partition-count>53</partition-count>
			<thread-count>10</thread-count>
			<autostart>true</autostart>
		</distributed-scheme>

		<!-- Cache distribuida que podrá almacenar alrededor de 5M y expira cada 24 horas. -->
		<distributed-scheme>
			<scheme-name>default-scheme</scheme-name>
			<service-name>DefaultDistributedService</service-name>
			<backing-map-scheme>
				<local-scheme>
					<expiry-delay>24H</expiry-delay>
					<high-units>5</high-units>
					<unit-calculator>BINARY</unit-calculator>
					<unit-factor>1048576</unit-factor>
				</local-scheme>
			</backing-map-scheme>
			<partition-count>17</partition-count>
			<thread-count>5</thread-count>
			<autostart>true</autostart>
		</distributed-scheme>

	<!-- Configuración para Coherence Tomcat Session -->

	   <!--
	    Replicated caching scheme used by the Session management and ServletContext
	    attribute caches.
	    -->
	    <replicated-scheme>
	      <scheme-name>replicated</scheme-name>
	      <service-name>ReplicatedSessionsMisc</service-name>
	      <request-timeout>30s</request-timeout>
	      <backing-map-scheme>
	        <local-scheme>
	          <scheme-ref>unlimited-local</scheme-ref>
	        </local-scheme>
	      </backing-map-scheme>
	      <autostart>true</autostart>
	    </replicated-scheme>
	
	    <!--
	    Near caching scheme used by the Session attribute cache. The front cache
	    uses a Local caching scheme and the back cache uses a Distributed caching
	    scheme.
	    -->
	    <near-scheme>
	      <scheme-name>session-near</scheme-name>
	      <front-scheme>
	        <local-scheme>
	          <scheme-ref>session-front</scheme-ref>
	        </local-scheme>
	      </front-scheme>
	      <back-scheme>
	        <distributed-scheme>
	          <scheme-ref>session-distributed</scheme-ref>
	        </distributed-scheme>
	      </back-scheme>
	      <invalidation-strategy>present</invalidation-strategy>
	    </near-scheme>
	
	    <local-scheme>
	      <scheme-name>session-front</scheme-name>
	      <eviction-policy>HYBRID</eviction-policy>
	      <!-- Aproximadamante 85 sesiones por Gb de heap, en la app de test de Globalia -->
	      <!-- Con 3Gb de heap ponemos maximo de 300 sesiones -->
	      <high-units>255</high-units>
	      <low-units>200</low-units>
	    </local-scheme>
	
	    <distributed-scheme>
	      <scheme-name>session-distributed</scheme-name>
	      <scheme-ref>session-base</scheme-ref>
	      <backing-map-scheme>
	        <!-- Usar esto si NO queremos desbordamiento a disco. Es la opcion por defecto
	        <local-scheme>
	          <scheme-ref>unlimited-local</scheme-ref>
	        </local-scheme>
	        -->
	        <!-- for disk overflow use this backing scheme instead: -->
	        <overflow-scheme>
	          <scheme-ref>session-paging</scheme-ref>
	        </overflow-scheme>
	      </backing-map-scheme>
	    </distributed-scheme>
	
	    <!--
	    Distributed caching scheme used by the "recently departed" Session cache.
	    -->
	    <distributed-scheme>
	      <scheme-name>session-certificate</scheme-name>
	      <scheme-ref>session-base</scheme-ref>
	      <backing-map-scheme>
	        <local-scheme>
	          <eviction-policy>HYBRID</eviction-policy>
	          <high-units>4000</high-units>
	          <low-units>3000</low-units>
	          <expiry-delay>86400</expiry-delay>
	        </local-scheme>
	      </backing-map-scheme>
	    </distributed-scheme>

		<!-- "Base" Distributed caching scheme that defines common configuration. -->
		<distributed-scheme>
			<scheme-name>session-base</scheme-name>
			<service-name>DistributedSessions</service-name>
			<thread-count>0</thread-count>
			<lease-granularity>member</lease-granularity>
			<local-storage system-property="tangosol.coherence.session.localstorage">false</local-storage>
			<partition-count>257</partition-count>
			<backup-count>1</backup-count>
			<backup-storage>
				<type>on-heap</type>
			</backup-storage>
			<request-timeout>30s</request-timeout>
			<backing-map-scheme>
				<local-scheme>
					<expiry-delay>24H</expiry-delay>
					<high-units>5</high-units>
					<unit-calculator>BINARY</unit-calculator>
					<unit-factor>1048576</unit-factor>
				</local-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>

		<!-- Disk-based Session attribute overflow caching scheme. -->
		<overflow-scheme>
			<scheme-name>session-paging</scheme-name>
			<front-scheme>
				<local-scheme>
					<scheme-ref>session-front</scheme-ref>
				</local-scheme>
			</front-scheme>
			<back-scheme>
				<local-scheme>
					<expiry-delay>15M</expiry-delay>
					<high-units>5</high-units>
					<unit-calculator>BINARY</unit-calculator>
					<unit-factor>1048576</unit-factor>
				</local-scheme>
			</back-scheme>
		</overflow-scheme>

		<!-- Local caching scheme definition used by all caches that do not require an eviction policy. -->
		<local-scheme>
			<scheme-name>unlimited-local</scheme-name>
			<service-name>LocalSessionCache</service-name>
		</local-scheme>

		<!-- Clustered invocation service that manages sticky session ownership. -->
		<invocation-scheme>
			<service-name>SessionOwnership</service-name>
			<request-timeout>30s</request-timeout>
		</invocation-scheme>

		<distributed-scheme>
			<scheme-name>expiring-distributed</scheme-name>
			<service-name>ORA-OSB-deployments</service-name>
			<backing-map-scheme>
				<local-scheme>
				<scheme-ref>expiring-backing-map</scheme-ref>
				</local-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>
	
		<local-scheme>
			<scheme-name>expiring-backing-map</scheme-name>
			<expiry-delay>5m</expiry-delay>
		</local-scheme>

	</caching-schemes>
</cache-config>
